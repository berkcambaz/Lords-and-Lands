version: '3.8'
name: lordsandlands_dev

services:
  lordsandlands_api:
    build:
      context: .
      dockerfile: ./api/Dockerfile.dev
    env_file:
      - ./.env
    environment:
      - NODE_ENV=development
      - VIRTUAL_HOST=${VIRTUAL_HOST:-lordsandlands.dorkodu.com}
      - VIRTUAL_PORT=${API_PORT:-8009}
      - LETSENCRYPT_HOST=${LETSENCRYPT_HOST:-lordsandlands.dorkodu.com}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL:-hey@dorkodu.com}
      - VIRTUAL_PATH=/api
    expose:
      - ${API_PORT:-8009}
    volumes:
      - ./api:/lordsandlands/api
      - ./core:/lordsandlands/core
      - api_node_modules:/lordsandlands/api/node_modules
    restart: always
    networks:
      - app
      - nginx-proxy

  lordsandlands_web:
    build:
      context: .
      dockerfile: ./web/Dockerfile.dev
    env_file:
      - ./.env
    environment:
      - NODE_ENV=development
      - VIRTUAL_HOST=${VIRTUAL_HOST:-lordsandlands.dorkodu.com}
      - VIRTUAL_PORT=${WEB_PORT:-8008}
      - LETSENCRYPT_HOST=${LETSENCRYPT_HOST:-lordsandlands.dorkodu.com}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL:-hey@dorkodu.com}
      - VIRTUAL_PATH=/
    expose:
      - ${WEB_PORT:-8008}
    volumes:
      - ./web:/lordsandlands/web
      - ./api:/lordsandlands/api
      - ./core:/lordsandlands/core
      - web_node_modules:/lordsandlands/web/node_modules
    restart: always
    networks:
      - app
      - nginx-proxy

  lordsandlands_postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-lordsandlands}
      - PGPORT=${PGPORT:-7004}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    networks:
      - app
      - nginx-proxy

volumes:
  pgdata:
  api_node_modules:
  web_node_modules:

networks:
  nginx-proxy:
    external: true
  app: